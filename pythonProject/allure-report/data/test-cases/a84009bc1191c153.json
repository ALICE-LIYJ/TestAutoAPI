{
  "uid" : "a84009bc1191c153",
  "name" : "移动场景测试：相同文件夹名称，文件夹从第三层级移动到第一层级",
  "fullName" : "test_job.TestFileManagement#test_12MoveCase1_Success",
  "historyId" : "5dcf9b26d54c03b7ca2e148de4a33825",
  "time" : {
    "start" : 1701053883695,
    "stop" : 1701053883771,
    "duration" : 76
  },
  "description" : "\n        home目录下新建文件夹/LYJ111/LYJ111/LYJ111，\n        将文件夹/LYJ111移动到第一层级，\n        选择覆盖选中，\n        预期：移动失败，提示：不能覆盖文件的父目录\n        ",
  "descriptionHtml" : "<pre><code>    home目录下新建文件夹/LYJ111/LYJ111/LYJ111，\n    将文件夹/LYJ111移动到第一层级，\n    选择覆盖选中，\n    预期：移动失败，提示：不能覆盖文件的父目录\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 0 != 15017",
  "statusTrace" : "self = <test_job.TestFileManagement testMethod=test_12MoveCase1_Success>\n\n    @allure.title(\"移动场景测试：相同文件夹名称，文件夹从第三层级移动到第一层级\")\n    def test_12MoveCase1_Success(self):\n        \"\"\"\n        home目录下新建文件夹/LYJ111/LYJ111/LYJ111，\n        将文件夹/LYJ111移动到第一层级，\n        选择覆盖选中，\n        预期：移动失败，提示：不能覆盖文件的父目录\n        \"\"\"\n        with allure.step(\"步骤一：新建文件夹层级：/LYJ123/LYJ123/LYJ123\"):\n            pass\n    \n        create_url = 'https://192.168.111.191/api/v1/storage/createDir'\n        headers = {\n            \"Cookie\": PSPApi.GetCookie(url, name, password)\n        }\n        body = {\n            \"path\": \"./LYJ111/LYJ111/LYJ111\",\n            \"cross\": False,\n            \"is_cloud\": False,\n            \"user_name\": \"yskj\"\n        }\n        res = self.req.visit('post', create_url, headers=headers, json=body)\n        print(res)\n        # 根据请求结果中的code进行断言\n>       self.assertEqual(0, res['code'])\nE       AssertionError: 0 != 15017\n\ntest_job.py:1666: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_unittest_setUpClass_fixture_TestFileManagement",
    "time" : {
      "start" : 1701053881841,
      "stop" : 1701053881841,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        home目录下新建文件夹/LYJ111/LYJ111/LYJ111，\n        将文件夹/LYJ111移动到第一层级，\n        选择覆盖选中，\n        预期：移动失败，提示：不能覆盖文件的父目录\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 0 != 15017",
    "statusTrace" : "self = <test_job.TestFileManagement testMethod=test_12MoveCase1_Success>\n\n    @allure.title(\"移动场景测试：相同文件夹名称，文件夹从第三层级移动到第一层级\")\n    def test_12MoveCase1_Success(self):\n        \"\"\"\n        home目录下新建文件夹/LYJ111/LYJ111/LYJ111，\n        将文件夹/LYJ111移动到第一层级，\n        选择覆盖选中，\n        预期：移动失败，提示：不能覆盖文件的父目录\n        \"\"\"\n        with allure.step(\"步骤一：新建文件夹层级：/LYJ123/LYJ123/LYJ123\"):\n            pass\n    \n        create_url = 'https://192.168.111.191/api/v1/storage/createDir'\n        headers = {\n            \"Cookie\": PSPApi.GetCookie(url, name, password)\n        }\n        body = {\n            \"path\": \"./LYJ111/LYJ111/LYJ111\",\n            \"cross\": False,\n            \"is_cloud\": False,\n            \"user_name\": \"yskj\"\n        }\n        res = self.req.visit('post', create_url, headers=headers, json=body)\n        print(res)\n        # 根据请求结果中的code进行断言\n>       self.assertEqual(0, res['code'])\nE       AssertionError: 0 != 15017\n\ntest_job.py:1666: AssertionError",
    "steps" : [ {
      "name" : "步骤一：新建文件夹层级：/LYJ123/LYJ123/LYJ123",
      "time" : {
        "start" : 1701053883695,
        "stop" : 1701053883695,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "e0e0e731544cd4e",
      "name" : "stdout",
      "source" : "e0e0e731544cd4e.txt",
      "type" : "text/plain",
      "size" : 101
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_unittest_setUpClass_fixture_TestFileManagement::0",
    "time" : {
      "start" : 1701053884150,
      "stop" : 1701053884150,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "PSP"
  }, {
    "name" : "feature",
    "value" : "文件管理"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "test_job"
  }, {
    "name" : "subSuite",
    "value" : "TestFileManagement"
  }, {
    "name" : "host",
    "value" : "YSKJ0191"
  }, {
    "name" : "thread",
    "value" : "24676-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_job"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 24,
        "unknown" : 0,
        "total" : 28
      },
      "items" : [ {
        "uid" : "6ff52bbf1aa64a75",
        "reportUrl" : "http://localhost:8081/jenkins/job/Python-Allure-test/231/allure/#testresult/6ff52bbf1aa64a75",
        "status" : "failed",
        "statusDetails" : "AssertionError: 0 != 15017",
        "time" : {
          "start" : 1701052057900,
          "stop" : 1701052057981,
          "duration" : 81
        }
      }, {
        "uid" : "734e04dd15e91906",
        "reportUrl" : "http://localhost:8081/jenkins/job/Python-Allure-test/230/allure/#testresult/734e04dd15e91906",
        "status" : "passed",
        "time" : {
          "start" : 1700793161270,
          "stop" : 1700793163515,
          "duration" : 2245
        }
      }, {
        "uid" : "bd68ae4a9087ef05",
        "reportUrl" : "http://localhost:8081/jenkins/job/Python-Allure-test/229/allure/#testresult/bd68ae4a9087ef05",
        "status" : "passed",
        "time" : {
          "start" : 1700723095783,
          "stop" : 1700723096457,
          "duration" : 674
        }
      }, {
        "uid" : "eb31d83359e0e565",
        "reportUrl" : "http://localhost:8081/jenkins/job/Python-Allure-test/228/allure/#testresult/eb31d83359e0e565",
        "status" : "passed",
        "time" : {
          "start" : 1700710271156,
          "stop" : 1700710272139,
          "duration" : 983
        }
      }, {
        "uid" : "9760764c3de8ddc9",
        "reportUrl" : "http://localhost:8081/jenkins/job/Python-Allure-test/227/allure/#testresult/9760764c3de8ddc9",
        "status" : "passed",
        "time" : {
          "start" : 1700629853247,
          "stop" : 1700629853761,
          "duration" : 514
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a84009bc1191c153.json",
  "parameterValues" : [ ]
}